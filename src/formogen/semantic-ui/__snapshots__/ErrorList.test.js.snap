// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ErrorsList /> 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ErrorsList
    color="green"
    header="test"
    messages={
      Array [
        "test1",
        "test2",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <MessageHeader>
          test
        </MessageHeader>,
        <MessageList
          as="ul"
        >
          <MessageItem
            as="li"
          >
            test1
          </MessageItem>
          <MessageItem
            as="li"
          >
            test2
          </MessageItem>
        </MessageList>,
      ],
      "color": "green",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "test",
        },
        "ref": null,
        "rendered": "test",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "ul",
          "children": Array [
            <MessageItem
              as="li"
            >
              test1
            </MessageItem>,
            <MessageItem
              as="li"
            >
              test2
            </MessageItem>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "function",
            "props": Object {
              "as": "li",
              "children": "test1",
            },
            "ref": null,
            "rendered": "test1",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "function",
            "props": Object {
              "as": "li",
              "children": "test2",
            },
            "ref": null,
            "rendered": "test2",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <MessageHeader>
            test
          </MessageHeader>,
          <MessageList
            as="ul"
          >
            <MessageItem
              as="li"
            >
              test1
            </MessageItem>
            <MessageItem
              as="li"
            >
              test2
            </MessageItem>
          </MessageList>,
        ],
        "color": "green",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "test",
          },
          "ref": null,
          "rendered": "test",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "ul",
            "children": Array [
              <MessageItem
                as="li"
              >
                test1
              </MessageItem>,
              <MessageItem
                as="li"
              >
                test2
              </MessageItem>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "function",
              "props": Object {
                "as": "li",
                "children": "test1",
              },
              "ref": null,
              "rendered": "test1",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "function",
              "props": Object {
                "as": "li",
                "children": "test2",
              },
              "ref": null,
              "rendered": "test2",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
